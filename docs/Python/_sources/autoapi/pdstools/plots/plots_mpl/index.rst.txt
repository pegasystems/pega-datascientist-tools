:py:mod:`pdstools.plots.plots_mpl`
==================================

.. py:module:: pdstools.plots.plots_mpl


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pdstools.plots.plots_mpl.ADMVisualisations




.. py:class:: ADMVisualisations

   .. py:method:: distribution_graph(df: pandas.DataFrame, title: str, figsize: tuple) -> matplotlib.pyplot.figure
      :staticmethod:

      Generic method to generate distribution graphs given data and graph size

      :param df: The input data
      :type df: pd.DataFrame
      :param title: Title of graph
      :type title: str
      :param figsize: Size of graph
      :type figsize: tuple

      :returns: The generated figure
      :rtype: plt.figure


   .. py:method:: PerformanceSuccessRateBubbleChart(df, annotate: bool = False, sizes: tuple = (10, 2000), aspect: int = 3, b_to_anchor: tuple = (1.1, 0.7), figsize: tuple = (20, 5), **kwargs) -> matplotlib.pyplot.figure

      Creates bubble chart similar to ADM OOTB reports

      :param annotate: If set to True, the total responses per model will be annotated
                       to the right of the bubble. All bubbles will be the same size
                       if this is set to True
      :type annotate: bool
      :param sizes: To determine how sizes are chosen when 'size' is used. 'size'
                    will not be used if annotate is set to True
      :type sizes: tuple
      :param aspect: Aspect ratio of the graph
      :type aspect: int
      :param b_to_anchor: Position of the legend
      :type b_to_anchor: tuple
      :param last: Whether to only include the last snapshot for each model
      :type last: bool
      :param query: The query to supply to _apply_query
                    If a string, uses the default Pandas query function
                    Else, a dict of lists where the key is column name in the dataframe
                    and the corresponding value is a list of values to keep in the dataframe
      :type query: Union[str, dict]
      :param figsize: Size of graph
      :type figsize: tuple

      :rtype: plt.figure


   .. py:method:: PerformanceAndSuccessRateOverTime(df, day_interval: int = 7, query: Union[str, dict] = None, figsize: tuple = (16, 10), **kwargs) -> matplotlib.pyplot.figure

      Shows responses and performance of models over time

      Reponses are on the y axis and the performance of the model is indicated by heatmap.
      x axis is date

      :param day_interval: Interval of tick labels along x axis
      :type day_interval: int
      :param query: The query to supply to _apply_query
                    If a string, uses the default Pandas query function
                    Else, a dict of lists where the key is column name in the dataframe
                    and the corresponding value is a list of values to keep in the dataframe
      :type query: Union[str, dict]
      :param figsize: Size of graph
      :type figsize: tuple

      :rtype: plt.figure


   .. py:method:: ResponseCountMatrix(annot_df, heatmap_df, lookback=15, fill_null_days=False, query: Union[str, dict] = None, figsize=(14, 10), **kwargs) -> matplotlib.pyplot.figure

      Creates a calendar heatmap

      x axis shows model names and y axis the dates. Data in each cell is the total number
      of responses. The color indicates where responses increased/decreased or
      did not change compared to the previous day

      :param lookback: Defines how many days to look back at data from the last snapshot
      :type lookback: int
      :param fill_null_days: If True, null values will be generated in the dataframe for
                             days where there is no model snapshot
      :type fill_null_days: bool
      :param query: The query to supply to _apply_query
                    If a string, uses the default Pandas query function
                    Else, a dict of lists where the key is column name in the dataframe
                    and the corresponding value is a list of values to keep in the dataframe
      :type query: Union[str, dict]
      :param figsize: Size of graph
      :type figsize: tuple

      :rtype: plt.figure


   .. py:method:: OverTime(df, metric='Performance', by='ModelID', day_interval: int = 7, query: Union[str, dict] = None, figsize: tuple = (16, 10), **kwargs) -> matplotlib.pyplot.figure

      Shows success rate of models over time

      :param day_interval (int): interval of tick labels along x axis
      :param query: The query to supply to _apply_query
                    If a string, uses the default Pandas query function
                    Else, a dict of lists where the key is column name in the dataframe
                    and the corresponding value is a list of values to keep in the dataframe
      :type query: Union[str, dict]
      :param figsize: Size of graph
      :type figsize: tuple

      :rtype: plt.figure


   .. py:method:: PropositionSuccessRates(df, metric, by, query: Union[str, dict] = None, figsize: tuple = (12, 8), **kwargs) -> matplotlib.pyplot.figure

      Shows all latest proposition success rates

      A bar plot to show the success rate of all latest model instances (propositions)
      For reading simplicity, latest success rate is also annotated next to each bar

      :param query: The query to supply to _apply_query
                    If a string, uses the default Pandas query function
                    Else, a dict of lists where the key is column name in the dataframe
                    and the corresponding value is a list of values to keep in the dataframe
      :type query: Union[str, dict]
      :param figsize: Size of graph
      :type figsize: tuple

      :rtype: plt.figure


   .. py:method:: ScoreDistribution(df, show_zero_responses: bool = False, query: Union[str, dict] = None, figsize: tuple = (14, 10), **kwargs) -> matplotlib.pyplot.figure

      Show score distribution similar to ADM out-of-the-box report

      Shows a score distribution graph per model. If certain models selected,
      only those models will be shown.
      the only difference between this graph and the one shown on ADM
      report is that, here the raw number of responses are shown on left y-axis whereas in
      ADM reports, the percentage of responses are shown

      :param show_zero_responses: Whether to include bins with no responses at all
      :type show_zero_responses: bool
      :param query: The query to supply to _apply_query
                    If a string, uses the default Pandas query function
                    Else, a dict of lists where the key is column name in the dataframe
                    and the corresponding value is a list of values to keep in the dataframe
      :type query: Union[str, dict]
      :param figsize: Size of graph
      :type figsize: tuple

      :rtype: plt.figure


   .. py:method:: PredictorBinning(df, query: Union[str, dict] = None, figsize: tuple = (10, 5), **kwargs) -> matplotlib.pyplot.figure

      Show predictor graphs for a given model

      For a given model (query) shows all its predictors' graphs. If certain predictors
      selected, only those predictor graphs will be shown

      :param predictors: List of predictors to show their graphs, optional
      :type predictors: list
      :param ModelID: List of model IDs to subset on, optional
      :type ModelID: str
      :param query: The query to supply to _apply_query
                    If a string, uses the default Pandas query function
                    Else, a dict of lists where the key is column name in the dataframe
                    and the corresponding value is a list of values to keep in the dataframe
      :type query: Union[str, dict]
      :param figsize: Size of graph
      :type figsize: tuple

      :rtype: plt.figure


   .. py:method:: PredictorPerformance(df, order, query: Union[str, dict] = None, figsize: tuple = (6, 12), **kwargs) -> matplotlib.pyplot.figure

      Shows a box plot of predictor performance

      :param query: The query to supply to _apply_query
                    If a string, uses the default Pandas query function
                    Else, a dict of lists where the key is column name in the dataframe
                    and the corresponding value is a list of values to keep in the dataframe
      :type query: Union[str, dict]
      :param figsize: Size of graph
      :type figsize: tuple

      :rtype: plt.figure


   .. py:method:: PredictorPerformanceHeatmap(df, query: Union[str, dict] = None, figsize=(14, 10), **kwargs) -> matplotlib.pyplot.figure

      Shows a heatmap plot of predictor performance across models

      :param query: The query to supply to _apply_query
                    If a string, uses the default Pandas query function
                    Else, a dict of lists where the key is column name in the dataframe
                    and the corresponding value is a list of values to keep in the dataframe
      :type query: Union[str, dict]
      :param figsize: size of graph
      :type figsize: tuple

      :rtype: plt.figure


   .. py:method:: ImpactInfluence(df, ModelID: str = None, query: Union[str, dict] = None, figsize: tuple = (12, 5), **kwargs) -> matplotlib.pyplot.figure

      Calculate the impact and influence of a given model's predictors

      :param modelID: The selected model ID
      :type modelID: str
      :param query: The query to supply to _apply_query
                    If a string, uses the default Pandas query function
                    Else, a dict of lists where the key is column name in the dataframe
                    and the corresponding value is a list of values to keep in the dataframe
      :type query: Union[str, dict]
      :param figsize: size of graph
      :type figsize: tuple

      :rtype: plt.figure



